CMAKE_MINIMUM_REQUIRED(VERSION 3.10)

IF(MSVC)
    FIND_PACKAGE(gRPC CONFIG REQUIRED PATHS ${VCPKG_DIR}/x64-windows/share/grpc)
ELSE(MSVC)
    FIND_PACKAGE(gRPC CONFIG REQUIRED PATHS ${VCPKG_DIR}/x64-linux/share/grpc)
ENDIF(MSVC)

SET(PROJECT_NAME ${GENERATOR_PROJECT_NAME})
PROJECT(${PROJECT_NAME})

SET(PROJECT_ROOT_DIR ${GENERATOR_ROOT_DIR})
SET(HEADER_FILES "")
SET(SRC_FILES "")

FILE(GLOB HEADER_FILES
    ${PROJECT_ROOT_DIR}/${HEADER_DIR}/*.h
    ${PROJECT_ROOT_DIR}/${PCH_HEADER}
    ${CURL_DIR}/include/curl/*.h
)

FILE(GLOB SRC_FILES
    ${PROJECT_ROOT_DIR}/${SRC_DIR}/*.cpp
    ${PROJECT_ROOT_DIR}/${PCH_SRC}
    ${PROJECT_ROOT_DIR}/generated/*.cc
)

FILE(GLOB CURL_FILES
    ${CURL_DIR}/lib/*.c
    ${CURL_DIR}/lib/vauth/*.c
    ${CURL_DIR}/lib/vtls/*.c
)

FILE(GLOB GENERATED_FILES
    ${PROJECT_ROOT_DIR}/generated/*.cc
)

# Include
INCLUDE_DIRECTORIES(${PCH_DIR})
INCLUDE_DIRECTORIES(${HEADER_DIR})
INCLUDE_DIRECTORIES(${PROJECT_ROOT_DIR}/generated)
INCLUDE_DIRECTORIES(${RIOTAPI_ROOT_DIR}/${HEADER_DIR})
INCLUDE_DIRECTORIES(${BOOST_DIR})
INCLUDE_DIRECTORIES(${CURL_DIR}/include)
INCLUDE_DIRECTORIES(${CURL_DIR}/lib)
INCLUDE_DIRECTORIES(${JSON_DIR})
INCLUDE_DIRECTORIES(${MARIADB_DIR}/include)

IF(MSVC)
    INCLUDE_DIRECTORIES(${VCPKG_DIR}/x64-windows/include)
ELSE(MSVC)
    INCLUDE_DIRECTORIES(${VCPKG_DIR}/x64-linux/include)
ENDIF(MSVC)

# Generate project
ADD_EXECUTABLE(${PROJECT_NAME}
    ${HEADER_FILES}
    ${SRC_FILES}
    ${CURL_FILES}
)

# Compiler options
SET_PROPERTY(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
SET_PROPERTY(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD_REQUIRED ON)

# Preprocessing
TARGET_COMPILE_DEFINITIONS(${PROJECT_NAME} PRIVATE CURL_STATICLIB CURL_STRICTER)
IF(MSVC)
    TARGET_COMPILE_DEFINITIONS(${PROJECT_NAME} PRIVATE USE_SCHANNEL USE_WINDOWS_SSPI _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING)
ELSE(MSVC)
    TARGET_COMPILE_DEFINITIONS(${PROJECT_NAME} PRIVATE HAVE_CONFIG_H)
ENDIF(MSVC)

# Precompiled header for MSVC
MSVC_SET_PCH(${PROJECT_NAME}
    ${PCH_HEADER}
    ${PCH_SRC}
)

SET(MSVC_EXCLUDE_FILES ${CURL_FILES} ${GENERATED_FILES})
MSVC_EXCLUDE_PCH("${MSVC_EXCLUDE_FILES}")

# Link libraries
TARGET_LINK_LIBRARIES(${PROJECT_NAME}
    ${RIOTAPI_PROJECT_NAME}
)

IF(MSVC)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME}
        wldap32.lib
        crypt32.lib
        ws2_32.lib
        ${MARIADB_DIR}/lib/libmariadb.lib
    )
ENDIF(MSVC)